<?php

/**
 *  Implements hook_menu().
 *  Arg(1) is the node
 *  Arg(2) is the comment id
 */
function nodejs_menu() {
  return array(
    'comment/%node/js' => array(
      'page callback' => 'nodejs_raw_comment',
      'page arguments' => array(1),
      'access callback' => TRUE,
    ),
  );
}

/**
 *  Get a raw comment for NodeJS
 *
 *  @param $comment
 *  Fully comment object
 *  @return
 *  Return a JSON object with raw comment
 */
function nodejs_raw_comment($node) {
  $comment_obj = nodejs_render($node);
  return drupal_json($comment);
}

/**
 * Renders comment(s).
 * This function is a duplication of comment_render()
 * but with less stuff (can't do differently without any hook)
 */
function nodejs_render($node) {
  global $user;

  $output = '';

  if (user_access('access comments')) {
    // Pre-process variables.
    $nid = $node->nid;
    if (empty($nid)) {
      $nid = 0;
    }

    $mode = _comment_get_display_setting('mode', $node);
    $order = _comment_get_display_setting('sort', $node);
    $comments_per_page = _comment_get_display_setting('comments_per_page', $node);

    // Multiple comment view
    $query_count = 'SELECT COUNT(*) FROM {comments} c WHERE c.nid = %d';
    $query = 'SELECT c.cid as cid, c.pid, c.nid, c.subject, c.comment, c.format, c.timestamp, c.name, c.mail, c.homepage, u.uid, u.name AS registered_name, u.signature, u.signature_format, u.picture, u.data, c.thread, c.status FROM {comments} c INNER JOIN {users} u ON c.uid = u.uid WHERE c.nid = %d';

    $query_args = array($nid);
    if (!user_access('administer comments')) {
      $query .= ' AND c.status = %d';
      $query_count .= ' AND c.status = %d';
      $query_args[] = COMMENT_PUBLISHED;
    }

    if ($order == COMMENT_ORDER_NEWEST_FIRST) {
      if ($mode == COMMENT_MODE_FLAT_COLLAPSED || $mode == COMMENT_MODE_FLAT_EXPANDED) {
        $query .= ' ORDER BY c.cid DESC';
      }
      else {
        $query .= ' ORDER BY c.thread DESC';
      }
    }
    else if ($order == COMMENT_ORDER_OLDEST_FIRST) {
      if ($mode == COMMENT_MODE_FLAT_COLLAPSED || $mode == COMMENT_MODE_FLAT_EXPANDED) {
        $query .= ' ORDER BY c.cid';
      }
      else {
        // See comment above. Analysis reveals that this doesn't cost too
        // much. It scales much much better than having the whole comment
        // structure.
        $query .= ' ORDER BY SUBSTRING(c.thread, 1, (LENGTH(c.thread) - 1))';
      }
    }
    $query = db_rewrite_sql($query, 'c', 'cid');
    $query_count = db_rewrite_sql($query_count, 'c', 'cid');

    // Start a form, for use with comment control.
    $result = pager_query($query, $comments_per_page, 0, $query_count, $query_args);

    $divs = 0;
    $num_rows = FALSE;
    $comments = '';
    drupal_add_css(drupal_get_path('module', 'comment') .'/comment.css');
    while ($comment = db_fetch_object($result)) {
      $comment = drupal_unpack($comment);
      $comment->name = $comment->uid ? $comment->registered_name : $comment->name;
      $comment->depth = count(explode('.', $comment->thread)) - 1;

      if ($mode == COMMENT_MODE_THREADED_COLLAPSED || $mode == COMMENT_MODE_THREADED_EXPANDED) {
        if ($comment->depth > $divs) {
          $divs++;
          $comments .= '<div class="indented">';
        }
        else {
          while ($comment->depth < $divs) {
            $divs--;
            $comments .= '</div>';
          }
        }
      }

      if ($mode == COMMENT_MODE_FLAT_COLLAPSED) {
        $comments .= theme('comment_flat_collapsed', $comment, $node);
      }
      else if ($mode == COMMENT_MODE_FLAT_EXPANDED) {
        $comments .= theme('comment_flat_expanded', $comment, $node);
      }
      else if ($mode == COMMENT_MODE_THREADED_COLLAPSED) {
        $comments .= theme('comment_thread_collapsed', $comment, $node);
      }
      else if ($mode == COMMENT_MODE_THREADED_EXPANDED) {
        $comments .= theme('comment_thread_expanded', $comment, $node);
      }

      $num_rows = TRUE;
    }
    while ($divs-- > 0) {
      $comments .= '</div>';
    }

    $output .= $comments;
    $output .= theme('pager', NULL, $comments_per_page, 0);

    // If enabled, show new comment form if it's not already being displayed.
    $reply = arg(0) == 'comment' && arg(1) == 'reply';
    if (user_access('post comments') && node_comment_mode($nid) == COMMENT_NODE_READ_WRITE && (variable_get('comment_form_location_'. $node->type, COMMENT_FORM_SEPARATE_PAGE) == COMMENT_FORM_BELOW) && !$reply) {
      $output .= comment_form_box(array('nid' => $nid), t('Post new comment'));
    }

    // if ($output) {
    //   $output = theme('comment_wrapper', $output, $node);
    // }
  }

  return $output;
}